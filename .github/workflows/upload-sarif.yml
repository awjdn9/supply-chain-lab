# This workflow is a minimal configuration to enable GitHub Code Scanning
# to accept SARIF file uploads from other workflows.
name: Upload SARIF to Code Scanning

# This workflow is triggered when another workflow completes.
# We specify the 'Build, SBOM, Sign, and Scan' workflow by name.
on:
  workflow_run:
    workflows: ["Build, SBOM, Sign, and Scan"] # Replace with the exact name of your main workflow if different
    types:
      - completed

jobs:
  upload-sarif:
    runs-on: ubuntu-latest

    # Permissions required for uploading SARIF results
    permissions:
      contents: read # Required to checkout the repository
      security-events: write # Required to upload SARIF files

    steps:
      - name: Checkout code
        # Checkout the repository to access artifacts if needed (not strictly necessary for just uploading)
        uses: actions/checkout@v4

      # This step is a placeholder. The actual SARIF upload happens in your main workflow.
      # The presence of this action definition in a workflow file is what enables
      # Code Scanning to receive SARIF uploads for this repository.
      - name: Placeholder Upload Step
        run: echo "This workflow is configured to accept SARIF uploads."
        # In a real scenario processing artifacts, you might download the artifact here
        # - uses: actions/download-artifact@v4
        #   with:
        #     name: vulnerability-report # Name of the artifact from the other workflow
        #     path: . # Directory to download to

        # And then upload it using the upload-sarif action if not done in the source workflow
        # - name: Upload SARIF file
        #   uses: github/codeql-action/upload-sarif@v3
        #   with:
        #     sarif_file: ./vulnerability-report/vulnerability-report.sarif # Path to the downloaded SARIF file
